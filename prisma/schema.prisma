generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [pgcrypto]
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  modules   Module[]
  resources Resource[]
  chats     Chat[]
}

model Module {
  id          String     @id @default(uuid())
  name        String
  description String?
  icon        String     @default("ðŸ“š")
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  lastStudied DateTime?
  
  userId      String?
  sessionId   String?
  
  user        User?      @relation(fields: [userId], references: [id])
  
  resources   Resource[]
  chats       Chat[]

  @@index([userId])
  @@index([sessionId])
  @@unique([userId, name])
  @@unique([sessionId, name])
}

model Resource {
  id        String   @id @default(uuid())
  title     String
  content   String?
  type      String   @default("link")
  fileUrl   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  moduleId  String
  module    Module   @relation(fields: [moduleId], references: [id], onDelete: Cascade)
  
  userId    String?
  user      User?    @relation(fields: [userId], references: [id])
  sessionId String?

  @@index([moduleId])
  @@index([userId])
  @@index([sessionId])
}

model Chat {
  id          String    @id @default(cuid())
  title       String    @default("New Chat")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  messages    Json
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  moduleId    String?
  module      Module?   @relation(fields: [moduleId], references: [id])
}
