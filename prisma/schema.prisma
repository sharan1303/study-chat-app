generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [pgcrypto, uuid_ossp(map: "uuid-ossp", schema: "extensions")]
}

model User {
  id        String     @id @default(cuid())
  email     String     @unique
  name      String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  chats     Chat[]
  modules   Module[]
  resources Resource[]
}

model Module {
  id          String     @id @default(uuid())
  name        String
  context     String?
  icon        String     @default("ðŸ“š")
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  lastStudied DateTime?
  userId      String?
  sessionId   String?
  chats       Chat[]
  user        User?      @relation(fields: [userId], references: [id])
  resources   Resource[]

  @@unique([userId, name])
  @@unique([sessionId, name])
  @@index([userId])
  @@index([sessionId])
}

model Resource {
  id        String   @id @default(uuid())
  title     String
  type      String   @default("link")
  fileUrl   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  moduleId  String
  userId    String?
  fileSize  Int?
  module    Module   @relation(fields: [moduleId], references: [id], onDelete: Cascade)
  user      User?    @relation(fields: [userId], references: [id])

  @@index([moduleId])
  @@index([userId])
}

model Chat {
  id        String   @id @default(cuid())
  title     String   @default("New Chat")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  messages  Json
  userId    String?
  sessionId String?
  moduleId  String?
  module    Module?  @relation(fields: [moduleId], references: [id])
  user      User?    @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([sessionId])
}
